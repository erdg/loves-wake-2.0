{"version":3,"sources":["webpack:///route-Login.chunk.bb208.js","webpack:///./routes/Login/login-form-inputs.js","webpack:///./routes/Login/login-form.js","webpack:///./routes/Login/login-form-container.js","webpack:///./routes/Login/index.js"],"names":["webpackJsonp","w7+Q","module","__webpack_exports__","__webpack_require__","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","login_form__classCallCheck","instance","Constructor","login_form__possibleConstructorReturn","login_form__inherits","login_form_container__classCallCheck","login_form_container__possibleConstructorReturn","login_form_container__inherits","Login__classCallCheck","Login__possibleConstructorReturn","Login__inherits","defineProperty","preact_min","FlexContainer","preact_router_es","isEmail","isEmail_default","n","classnames","classnames_default","_ref","class","login_form_inputs_EmailInput","props","email","onChange","handleEmailChange","type","placeholder","_ref2","_ref3","login_form_inputs_PasswordInput","_Component","PasswordInput","this","apply","arguments","render","password","handlePasswordChange","showPassword","onClick","toggleShowPassword","toast","login_form__ref","login_form_LoginForm","LoginForm","formClasses","has-error","emailError","passwordError","loginBtnClasses","loading","loginBtnLoading","recoverBtnClasses","recoverBtnLoading","emailHintClasses","d-hide","passwordHintClasses","error","active","showServerError","serverError","handleLogin","handleRecoverAccount","api","login_form_container_LoginFormContainer","LoginFormContainer","_this","_handleLogin","e","preventDefault","state","setState","fetch","method","body","JSON","stringify","em","pw","then","res","json","console","log","loginToken","window","sessionStorage","setItem","_handleRecoverAccount","_handleEmailChange","bind","_handlePasswordChange","_toggleShowPassword","loginSuccess","recoverAccountSuccess","target","Login_Login","Login","formRail","handleLoginSuccess","user","token","handleRecoverAccountSuccess"],"mappings":"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","file":"route-Login.chunk.bb208.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ \"w7+Q\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ./components/FlexContainer/index.js\nvar FlexContainer = __webpack_require__(\"o9Qj\");\n\n// EXTERNAL MODULE: ../node_modules/preact-router/dist/preact-router.es.js\nvar preact_router_es = __webpack_require__(\"/QC5\");\n\n// EXTERNAL MODULE: ../node_modules/validator/lib/isEmail.js\nvar isEmail = __webpack_require__(\"khkS\");\nvar isEmail_default = /*#__PURE__*/__webpack_require__.n(isEmail);\n\n// EXTERNAL MODULE: ../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"9qb7\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./components/dialog.js\nvar dialog = __webpack_require__(\"wI7h\");\n\n// CONCATENATED MODULE: ./routes/Login/login-form-inputs.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar _ref = Object(preact_min[\"h\"])(\n   'label',\n   { 'class': 'form-label' },\n   'Email'\n);\n\nvar login_form_inputs_EmailInput = function EmailInput(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      null,\n      _ref,\n      Object(preact_min[\"h\"])('input', {\n         value: props.email,\n         onChange: props.handleEmailChange,\n         type: 'email',\n         'class': 'form-input',\n         placeholder: 'Your email'\n      })\n   );\n};\n\nvar _ref2 = Object(preact_min[\"h\"])(\n   'label',\n   { 'class': 'form-label' },\n   'Password'\n);\n\nvar _ref3 = Object(preact_min[\"h\"])('i', { 'class': 'form-icon' });\n\nvar login_form_inputs_PasswordInput = function (_Component) {\n   _inherits(PasswordInput, _Component);\n\n   function PasswordInput() {\n      _classCallCheck(this, PasswordInput);\n\n      return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   PasswordInput.prototype.render = function render(props) {\n      return Object(preact_min[\"h\"])(\n         'div',\n         null,\n         _ref2,\n         Object(preact_min[\"h\"])('input', {\n            value: props.password,\n            onChange: props.handlePasswordChange,\n            'class': 'form-input',\n            type: props.showPassword ? \"text\" : \"password\",\n            placeholder: 'Your password'\n         }),\n         Object(preact_min[\"h\"])(\n            'label',\n            { 'class': 'form-switch' },\n            Object(preact_min[\"h\"])('input', { type: 'checkbox',\n               onClick: props.toggleShowPassword\n            }),\n            _ref3,\n            'Show password'\n         )\n      );\n   };\n\n   return PasswordInput;\n}(preact_min[\"Component\"]);\n\n\n// EXTERNAL MODULE: ./components/toast.js\nvar toast = __webpack_require__(\"r33O\");\n\n// CONCATENATED MODULE: ./routes/Login/login-form.js\n\n\nfunction login_form__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction login_form__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction login_form__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar login_form__ref = Object(preact_min[\"h\"])(\n   'h1',\n   null,\n   'Login'\n);\n\nvar login_form_LoginForm = function (_Component) {\n   login_form__inherits(LoginForm, _Component);\n\n   function LoginForm() {\n      login_form__classCallCheck(this, LoginForm);\n\n      return login_form__possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   LoginForm.prototype.render = function render(props) {\n\n      var formClasses = classnames_default()('form-group', { 'has-error': props.emailError || props.passwordError });\n\n      var loginBtnClasses = classnames_default()('btn', 'btn-primary', { 'loading': props.loginBtnLoading });\n\n      var recoverBtnClasses = classnames_default()('btn', 'btn-link', 'float-right', { 'loading': props.recoverBtnLoading });\n\n      var emailHintClasses = classnames_default()('form-input-hint', { 'd-hide': !props.emailError });\n\n      var passwordHintClasses = classnames_default()('form-input-hint', { 'd-hide': !props.passwordError });\n\n      return Object(preact_min[\"h\"])(\n         'form',\n         { 'class': formClasses },\n         login_form__ref,\n         Object(preact_min[\"h\"])(\n            toast[\"a\" /* default */],\n            { error: true, active: props.showServerError },\n            props.serverError\n         ),\n         Object(preact_min[\"h\"])(login_form_inputs_EmailInput, {\n            email: props.email,\n            handleEmailChange: props.handleEmailChange\n         }),\n         Object(preact_min[\"h\"])(\n            'p',\n            { 'class': emailHintClasses },\n            'Please enter a valid email address'\n         ),\n         Object(preact_min[\"h\"])(login_form_inputs_PasswordInput, {\n            password: props.password,\n            handlePasswordChange: props.handlePasswordChange,\n            toggleShowPassword: props.toggleShowPassword,\n            showPassword: props.showPassword\n         }),\n         Object(preact_min[\"h\"])(\n            'p',\n            { 'class': passwordHintClasses },\n            'Gotta have a password to login...'\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'row' },\n            Object(preact_min[\"h\"])(\n               'button',\n               {\n                  type: 'submit',\n                  'class': loginBtnClasses,\n                  onClick: props.handleLogin\n               },\n               'Login'\n            ),\n            Object(preact_min[\"h\"])(\n               'button',\n               {\n                  'class': recoverBtnClasses,\n                  onClick: props.handleRecoverAccount\n               },\n               'Recover account'\n            )\n         )\n      );\n   };\n\n   return LoginForm;\n}(preact_min[\"Component\"]);\n\n\n// EXTERNAL MODULE: ./api/index.js\nvar api = __webpack_require__(\"/C1n\");\n\n// CONCATENATED MODULE: ./routes/Login/login-form-container.js\n\n\nfunction login_form_container__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction login_form_container__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction login_form_container__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\nvar login_form_container_LoginFormContainer = function (_Component) {\n   login_form_container__inherits(LoginFormContainer, _Component);\n\n   function LoginFormContainer(props) {\n      login_form_container__classCallCheck(this, LoginFormContainer);\n\n      // this._handleLogin = this._handleLogin.bind(this);\n      var _this = login_form_container__possibleConstructorReturn(this, _Component.call(this, props));\n\n      _this._handleLogin = function (e) {\n         e.preventDefault();\n         // if email is not valid\n         if (!isEmail_default()(_this.state.email)) {\n            // throw email error, don't submit\n            _this.setState({ emailError: true });\n            return;\n         } else {\n            _this.setState({ emailError: false });\n         }\n\n         // make sure there's a password\n         if (!_this.state.password) {\n            _this.setState({ passwordError: true });\n            return;\n         } else {\n            _this.setState({ passwordError: false });\n         }\n\n         // loading spinner on button\n         _this.setState({ loginBtnLoading: true });\n\n         fetch(api[\"a\" /* default */] + \"!loginUser\", {\n            method: \"POST\",\n            body: JSON.stringify({\n               // on the server...\n               //\n               // (let [Em (posted \"em\")  Pw (posted \"pw\") ]\n               //    ... )\n               //\n               em: _this.state.email,\n               pw: _this.state.password\n            })\n         }).then(function (res) {\n            return res.json();\n         }).then(function (json) {\n            if (json.error) {\n               _this.setState({\n                  // display errors and remove loading spinner\n                  serverError: json.error,\n                  showServerError: true,\n                  loginBtnLoading: false\n               });\n            } else {\n               // remove loading spinner\n               _this.setState({ loginBtnLoading: false });\n               // store login token in sessionStorage\n               console.log('JWT: ', json.loginToken);\n               window.sessionStorage.setItem(\"loginToken\", json.loginToken);\n               Object(preact_router_es[\"route\"])(\"/user\");\n            }\n         });\n\n         // clear password\n         _this.setState({ password: '' });\n      };\n\n      _this._handleRecoverAccount = function () {\n         // loading spinner on button\n         _this.setState({ recoverBtnLoading: true });\n\n         fetch(api[\"a\" /* default */] + \"!recoverUserAccount\", {\n            method: 'POST',\n            body: JSON.stringify({\n               email: _this.state.email\n            })\n         }).then(function (res) {\n            return res.json();\n         }).then(function (json) {\n            if (json.error) {\n               _this.setState({\n                  // display errors and remove loading spinner\n                  serverError: json.error,\n                  showServerError: true,\n                  recoverBtnLoading: false\n               });\n            } else if (json.email) {\n               // remove loading spinner\n               _this.setState({\n                  recoverBtnLoading: false\n               });\n               console.log(json.email);\n            }\n         });\n      };\n\n      _this._handleEmailChange = _this._handleEmailChange.bind(_this);\n      _this._handlePasswordChange = _this._handlePasswordChange.bind(_this);\n      _this._toggleShowPassword = _this._toggleShowPassword.bind(_this);\n      _this.state = {\n         email: '',\n         emailError: false,\n         password: '',\n         passwordError: false,\n         showPassword: false,\n         serverError: '',\n         showServerError: false,\n         loginBtnLoading: false,\n         recoverBtnLoading: false,\n         loginSuccess: false,\n         recoverAccountSuccess: false\n      };\n      return _this;\n   }\n\n   LoginFormContainer.prototype._toggleShowPassword = function _toggleShowPassword() {\n      var showPassword = !this.state.showPassword;\n      this.setState({ showPassword: showPassword });\n   };\n\n   LoginFormContainer.prototype._handleEmailChange = function _handleEmailChange(e) {\n      this.setState({ email: e.target.value });\n   };\n\n   LoginFormContainer.prototype._handlePasswordChange = function _handlePasswordChange(e) {\n      this.setState({ password: e.target.value });\n   };\n\n   LoginFormContainer.prototype.render = function render() {\n      return Object(preact_min[\"h\"])(login_form_LoginForm, {\n\n         serverError: this.state.serverError,\n         showServerError: this.state.showServerError,\n\n         email: this.state.email,\n         emailError: this.state.emailError,\n         handleEmailChange: this._handleEmailChange,\n\n         password: this.state.password,\n         passwordError: this.state.passwordError,\n         handlePasswordChange: this._handlePasswordChange,\n\n         toggleShowPassword: this._toggleShowPassword,\n         showPassword: this.state.showPassword,\n\n         handleLogin: this._handleLogin,\n\n         loginBtnLoading: this.state.loginBtnLoading,\n         recoverBtnLoading: this.state.recoverBtnLoading,\n\n         handleRecoverAccount: this._handleRecoverAccount\n\n      });\n   };\n\n   return LoginFormContainer;\n}(preact_min[\"Component\"]);\n\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/Login/index.js\n\n\nfunction Login__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Login__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction Login__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar Login_Login = function (_Component) {\n   Login__inherits(Login, _Component);\n\n   function Login() {\n      Login__classCallCheck(this, Login);\n\n      return Login__possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   Login.prototype.render = function render(props) {\n      return Object(preact_min[\"h\"])(FlexContainer[\"a\" /* FlexContainer */], {\n         formRail: Object(preact_min[\"h\"])(login_form_container_LoginFormContainer, {\n            handleLoginSuccess: function handleLoginSuccess(user, token) {\n               return props.handleLoginSuccess(user, token);\n            },\n            handleRecoverAccountSuccess: function handleRecoverAccountSuccess(email) {\n               return props.handleRecoverAccountSuccess(email);\n            }\n         })\n      });\n   };\n\n   return Login;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var lib__ref__0_routes_Login = __webpack_exports__[\"default\"] = (Login_Login);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-Login.chunk.bb208.js","import { Component } from 'preact';\n\nimport { Dialog } from '../../components/dialog';\n\nconst EmailInput = (props) => (\n   <div>\n      <label class=\"form-label\">Email</label>\n      <input\n         value={props.email}\n         onChange={props.handleEmailChange}\n         type=\"email\"\n         class=\"form-input\" \n         placeholder=\"Your email\"\n      />\n   </div>\n)\n\nclass PasswordInput extends Component {\n\n   render (props) {\n      return (\n         <div>\n\n            <label class=\"form-label\">\n               Password\n            </label>\n            <input \n               value={ props.password }\n               onChange={ props.handlePasswordChange }\n               class=\"form-input\" \n               type={ props.showPassword ? \"text\" : \"password\" }\n               placeholder=\"Your password\"\n            />\n\n            <label class=\"form-switch\">\n               <input type=\"checkbox\" \n                  onClick={ props.toggleShowPassword } \n               />\n               <i class=\"form-icon\"></i>\n               Show password\n            </label>\n\n         </div>\n      )\n   }\n}\n\nexport { EmailInput, PasswordInput };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/Login/login-form-inputs.js","import { Component } from 'preact';\nimport classNames from 'classnames';\n\nimport { EmailInput, PasswordInput } from './login-form-inputs';\nimport { Dialog } from '../../components/dialog';\nimport Toast from '../../components/toast';\n\nclass LoginForm extends Component {\n\n   render (props) {\n\n      let formClasses = classNames(\n         'form-group', { 'has-error': props.emailError || props.passwordError }\n      );\n\n      let loginBtnClasses = classNames(\n         'btn', 'btn-primary', { 'loading': props.loginBtnLoading }\n      );\n\n      let recoverBtnClasses = classNames(\n         'btn', 'btn-link', 'float-right', { 'loading': props.recoverBtnLoading }\n      );\n\n      let emailHintClasses = classNames(\n         'form-input-hint', { 'd-hide': !props.emailError }\n      );\n\n      let passwordHintClasses = classNames(\n         'form-input-hint', { 'd-hide': !props.passwordError }\n      );\n\n      return (\n         <form class={ formClasses }>\n\n            <h1>Login</h1>\n\n            <Toast error active={props.showServerError}>\n               {props.serverError}\n            </Toast>\n\n            <EmailInput \n               email={props.email}\n               handleEmailChange={props.handleEmailChange}\n            />\n\n            <p class={ emailHintClasses }>\n               Please enter a valid email address\n            </p>\n\n            <PasswordInput \n               password={props.password}\n               handlePasswordChange={props.handlePasswordChange}\n               toggleShowPassword={ props.toggleShowPassword }\n               showPassword={ props.showPassword }\n            />\n\n            <p class={ passwordHintClasses }>\n               Gotta have a password to login...\n            </p>\n\n            <div class=\"row\">\n               <button \n                  type=\"submit\"\n                  class={ loginBtnClasses }\n                  onClick={ props.handleLogin }\n               >\n                  Login\n               </button>\n               <button \n                  class={ recoverBtnClasses }\n                  onClick={ props.handleRecoverAccount }\n               >\n                  Recover account\n               </button>\n\n            </div>\n\n         </form>\n      )\n   }\n}\n\nexport { LoginForm };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/Login/login-form.js","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\nimport isEmail from 'validator/lib/isEmail';\n\nimport { LoginForm } from './login-form';\n\nimport API_ENDPOINT from '../../api';\n\n\nclass LoginFormContainer extends Component { \n   constructor (props) {\n      super(props);\n      // this._handleLogin = this._handleLogin.bind(this);\n      this._handleEmailChange = this._handleEmailChange.bind(this);\n      this._handlePasswordChange = this._handlePasswordChange.bind(this);\n      this._toggleShowPassword = this._toggleShowPassword.bind(this);\n      this.state = {\n         email: '',\n         emailError: false,\n         password: '',\n         passwordError: false,\n         showPassword: false,\n         serverError: '',\n         showServerError: false,\n         loginBtnLoading: false,\n         recoverBtnLoading: false,\n         loginSuccess: false,\n         recoverAccountSuccess:false\n      };\n   }\n\n   _toggleShowPassword () {\n      let showPassword = !this.state.showPassword;\n      this.setState({ showPassword });\n   }\n\n   _handleLogin = (e) => {\n      e.preventDefault();\n      // if email is not valid\n      if (!(isEmail(this.state.email))) {\n         // throw email error, don't submit\n         this.setState({ emailError: true });\n         return;\n      } else {\n         this.setState({ emailError: false });\n      }\n\n      // make sure there's a password\n      if (!this.state.password) {\n         this.setState({ passwordError: true });\n         return;\n      } else { \n         this.setState({ passwordError: false }); \n      }\n\n      // loading spinner on button\n      this.setState({ loginBtnLoading: true });\n\n      fetch(API_ENDPOINT + \"!loginUser\", {\n         method: \"POST\",\n         body: JSON.stringify({\n            // on the server...\n            //\n            // (let [Em (posted \"em\")  Pw (posted \"pw\") ]\n            //    ... )\n            //\n            em: this.state.email,\n            pw: this.state.password\n         })\n      })\n      .then((res) => res.json())\n      .then((json) => {\n         if (json.error) {\n            this.setState({ \n               // display errors and remove loading spinner\n               serverError: json.error, \n               showServerError: true,\n               loginBtnLoading: false\n            });\n         } else {\n            // remove loading spinner\n            this.setState({ loginBtnLoading: false });\n            // store login token in sessionStorage\n            console.log('JWT: ', json.loginToken);\n            window.sessionStorage.setItem(\"loginToken\", json.loginToken);\n            route(\"/user\");\n         }\n      })\n\n      // clear password\n      this.setState({ password: '' });\n\n   }\n\n   _handleRecoverAccount = () => {\n      // loading spinner on button\n      this.setState({ recoverBtnLoading: true });\n\n      fetch(API_ENDPOINT + \"!recoverUserAccount\", {\n         method: 'POST',\n         body: JSON.stringify({\n            email: this.state.email\n         })\n      })\n      .then(res => res.json())\n      .then(json => {\n         if (json.error) {\n            this.setState({ \n               // display errors and remove loading spinner\n               serverError: json.error, \n               showServerError: true,\n               recoverBtnLoading: false\n            });\n         } else if (json.email) {\n            // remove loading spinner\n            this.setState({ \n               recoverBtnLoading: false\n            });\n            console.log(json.email);\n         }\n      })\n   }\n\n   _handleEmailChange (e) {\n      this.setState({ email: e.target.value });\n   }\n\n   _handlePasswordChange (e) {\n      this.setState({ password: e.target.value });\n   }\n\n   render () {\n      return (\n         <LoginForm \n\n            serverError={ this.state.serverError }\n            showServerError={ this.state.showServerError }\n\n            email={ this.state.email }\n            emailError={ this.state.emailError }\n            handleEmailChange={ this._handleEmailChange }\n\n            password={ this.state.password }\n            passwordError={ this.state.passwordError }\n            handlePasswordChange={ this._handlePasswordChange }\n\n            toggleShowPassword={ this._toggleShowPassword }\n            showPassword={ this.state.showPassword }\n\n            handleLogin={ this._handleLogin }\n\n            loginBtnLoading={ this.state.loginBtnLoading }\n            recoverBtnLoading={ this.state.recoverBtnLoading }\n\n            handleRecoverAccount={ this._handleRecoverAccount }\n\n         />\n      )\n   }\n}\n\nexport { LoginFormContainer };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/Login/login-form-container.js","import { h, Component } from 'preact';\n\nimport { FlexContainer } from '../../components/FlexContainer';\nimport { LoginFormContainer } from './login-form-container';\n\nclass Login extends Component {\n   render (props) {\n      return (\n         <FlexContainer\n            formRail={\n               <LoginFormContainer\n                  handleLoginSuccess={ (user, token) => props.handleLoginSuccess(user, token) }\n                  handleRecoverAccountSuccess={ (email) => props.handleRecoverAccountSuccess(email) }\n               />\n            }\n         />\n      );\n   }\n}\n\nexport default Login;\n\n\n\n\n// WEBPACK FOOTER //\n// ./routes/Login/index.js"],"sourceRoot":""}