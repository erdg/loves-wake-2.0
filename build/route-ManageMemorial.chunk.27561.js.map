{"version":3,"sources":["webpack:///route-ManageMemorial.chunk.27561.js","webpack:///./routes/ManageMemorial/ContentList.js","webpack:///./routes/ManageMemorial/EditCard.js","webpack:///./routes/ManageMemorial/EditModal.js","webpack:///./routes/ManageMemorial/BulkImport.js","webpack:///./routes/ManageMemorial/index.js"],"names":["webpackJsonp","FoBm","module","__webpack_exports__","__webpack_require__","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","BulkImport__classCallCheck","instance","Constructor","BulkImport__possibleConstructorReturn","BulkImport__inherits","ManageMemorial__classCallCheck","ManageMemorial__possibleConstructorReturn","ManageMemorial__inherits","defineProperty","preact_min","api","preact_router_es","GridContainer","_ref","class","_ref2","_ref3","ContentList_ContentList","props","onClick","newItem","style","items","map","item","ContentList_ContentCard","id","title","date","start","location","src","showModal","edited","ManageMemorial_ContentList","classnames","classnames_default","n","form_inputs","EditCard_EditCard","alt","caption","ManageMemorial_EditCard","EditModal__ref","EditModal_EditModal","_Component","EditModal","this","apply","arguments","render","modalClasses","active","has-error","modalError","width","window","innerWidth","document","documentElement","clientWidth","body","client","hideModal","aria-label","label","name","onChange","type","accept","file","onFileChange","updChronicle","newChronicle","ManageMemorial_EditModal","BulkImport__ref","BulkImport_BulkImport","BulkImport","_temp","_this","_ret","_len","length","args","Array","_key","concat","state","files","filesUploaded","e","setState","target","bulkImport","alert","cnt","nextFile","reader","FileReader","readAsDataURL","onload","str","result","split","fetch","method","JSON","stringify","loginToken","sessionStorage","getItem","urlNm","image","then","res","json","prevState","console","log","multiple","role","aria-valuenow","toString","aria-valuemin","aria-valuemax","ManageMemorial_BulkImport","ManageMemorial__ref","ManageMemorial_ManageMemorial","ManageMemorial","newState","oldState","makeFileURL","txt","subtitle","addItem","memorial","user","memorials","find","m","oldItem","_this2","avatarColumn","avatar","nm","href","urlStr","contentColumn"],"mappings":"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","file":"route-ManageMemorial.chunk.27561.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ \"FoBm\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ./api/index.js\nvar api = __webpack_require__(\"/C1n\");\n\n// EXTERNAL MODULE: ../node_modules/preact-router/dist/preact-router.es.js\nvar preact_router_es = __webpack_require__(\"/QC5\");\n\n// EXTERNAL MODULE: ./components/GridContainer/index.js\nvar GridContainer = __webpack_require__(\"v23/\");\n\n// CONCATENATED MODULE: ./routes/ManageMemorial/ContentList.js\n\n\n\n\nvar _ref = Object(preact_min[\"h\"])(\n   'h4',\n   { 'class': 'col' },\n   'Chronicle Items'\n);\n\nvar _ref2 = Object(preact_min[\"h\"])('div', { 'class': 'col' });\n\nvar _ref3 = Object(preact_min[\"h\"])('div', { 'class': 'divider' });\n\nvar ContentList_ContentList = function ContentList(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      null,\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'row' },\n         _ref,\n         _ref2,\n         Object(preact_min[\"h\"])(\n            'button',\n            {\n               'class': 'col btn btn-primary',\n               onClick: props.newItem\n            },\n            'Add Item'\n         )\n      ),\n      _ref3,\n      Object(preact_min[\"h\"])(\n         'div',\n         {\n            style: \"display:flex;\" + \"flex-direction:row;\" + \"flex-wrap:wrap;\" + \"align-items:flex-start;\" + \"justify-content:center;\"\n         },\n         props.items.map(function (item) {\n            return Object(preact_min[\"h\"])(ContentList_ContentCard, {\n               id: item.id,\n               title: item.title,\n               date: item.start,\n               location: item.location,\n               src: item.src,\n               showModal: function showModal(id) {\n                  return props.showModal(id);\n               },\n               edited: item.edited\n            });\n         })\n      )\n   );\n};\n\nvar ContentList_ContentCard = function ContentCard(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      { 'class': 'card m-2', style: \"width:200px;\" },\n      props.src && Object(preact_min[\"h\"])('img', { 'class': 'responsive-img mt-2 mx-2 centered', src: props.src, style: 'max-width:182px' }),\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'card-body' },\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'h6 text-ellipsis' },\n            props.title\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'text-gray text-ellipsis', style: 'font-size:smaller;' },\n            props.location\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'text-gray', style: 'font-size:smaller;' },\n            props.date\n         )\n      ),\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'card-footer' },\n         Object(preact_min[\"h\"])(\n            'button',\n            {\n               'class': 'btn btn-sm float-right',\n               onClick: function onClick(id) {\n                  return props.showModal(props.id);\n               }\n            },\n            'edit'\n         )\n      )\n   );\n};\n\n/* harmony default export */ var ManageMemorial_ContentList = (ContentList_ContentList);\n// EXTERNAL MODULE: ../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"9qb7\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./components/form-inputs/index.js\nvar form_inputs = __webpack_require__(\"AM5m\");\n\n// CONCATENATED MODULE: ./routes/ManageMemorial/EditCard.js\n\n\n\nvar EditCard_EditCard = function EditCard(props) {\n   return Object(preact_min[\"h\"])(\n      \"div\",\n      { \"class\": \"panel\" },\n      Object(preact_min[\"h\"])(\n         \"div\",\n         { \"class\": \"panel-body mt-2\" },\n         props.item.src && Object(preact_min[\"h\"])(\"img\", {\n            src: props.item.src,\n            alt: props.item.title,\n            \"class\": \"img-responsive my-2\"\n         }),\n         Object(preact_min[\"h\"])(\n            \"h4\",\n            null,\n            props.item.title\n         ),\n         Object(preact_min[\"h\"])(\n            \"div\",\n            { \"class\": \"text-gray d-inline\" },\n            props.item.location\n         ),\n         Object(preact_min[\"h\"])(\n            \"div\",\n            { \"class\": \"text-gray d-inline mx-2\" },\n            props.item.start\n         ),\n         Object(preact_min[\"h\"])(\n            \"p\",\n            null,\n            props.item.caption\n         )\n      )\n   );\n};\n\n/* harmony default export */ var ManageMemorial_EditCard = (EditCard_EditCard);\n// CONCATENATED MODULE: ./routes/ManageMemorial/EditModal.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n// edit a chronicle item\n\nvar EditModal__ref = Object(preact_min[\"h\"])(\n   'div',\n   { 'class': 'text-center text-gray', style: 'font-size:smaller;' },\n   '- Scroll down to see a preview -'\n);\n\nvar EditModal_EditModal = function (_Component) {\n   _inherits(EditModal, _Component);\n\n   function EditModal() {\n      _classCallCheck(this, EditModal);\n\n      return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   EditModal.prototype.render = function render(props) {\n      var modalClasses = classnames_default()(\"modal\", \"modal-lg\", { \"active\": props.showModal }, { \"has-error\": props.modalError });\n\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.client.width;\n\n      return Object(preact_min[\"h\"])(\n         'div',\n         { 'class': modalClasses },\n         Object(preact_min[\"h\"])('a', { onClick: props.hideModal,\n            'class': 'modal-overlay',\n            'aria-label': 'Close'\n         }),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'modal-container' },\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-header' },\n               Object(preact_min[\"h\"])('a', { onClick: props.hideModal,\n                  'class': 'btn btn-clear float-right',\n                  'aria-label': 'Close'\n               }),\n               Object(preact_min[\"h\"])(\n                  'div',\n                  { 'class': 'modal-title h5' },\n                  props.item.id ? \"Edit Item\" : \"Add Item\"\n               ),\n               width < 840 && EditModal__ref\n            ),\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-body' },\n               Object(preact_min[\"h\"])(\n                  'div',\n                  { 'class': width < 840 ? \"content\" : \"content container columns\" },\n                  Object(preact_min[\"h\"])(\n                     'form',\n                     { 'class': width < 840 ? \"form-group\" : \"form-group column col-5\" },\n                     Object(preact_min[\"h\"])(form_inputs[\"e\" /* TextInput */], {\n                        label: 'Title',\n                        name: 'title',\n                        value: props.item.title,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(form_inputs[\"e\" /* TextInput */], {\n                        label: 'Location',\n                        name: 'location',\n                        value: props.item.location,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(form_inputs[\"a\" /* DateInput */], {\n                        label: 'Date',\n                        name: 'start',\n                        value: props.item.start,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(\n                        'label',\n                        {\n                           'class': 'form-label'\n                        },\n                        'Change photo',\n                        Object(preact_min[\"h\"])('input', {\n                           'class': 'form-input',\n                           type: 'file',\n                           accept: '.jpg, .jpeg, .png',\n                           value: props.item.file,\n                           onChange: props.onFileChange\n                        })\n                     )\n                  ),\n                  Object(preact_min[\"h\"])(\n                     'div',\n                     { 'class': width < 840 ? \"\" : \"column col-7\" },\n                     Object(preact_min[\"h\"])(ManageMemorial_EditCard, { item: props.item })\n                  )\n               )\n            ),\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-footer' },\n               Object(preact_min[\"h\"])(\n                  'button',\n                  {\n                     'class': 'btn btn-primary',\n                     onClick: props.item.id ? props.updChronicle : props.newChronicle\n                  },\n                  props.item.id ? \"Update item\" : \"Add item\"\n               )\n            )\n         )\n      );\n   };\n\n   return EditModal;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var ManageMemorial_EditModal = (EditModal_EditModal);\n// CONCATENATED MODULE: ./routes/ManageMemorial/PublicUrl.js\n\n\n\nvar PublicUrl_PublicUrl = function PublicUrl(props) {\n   return Object(preact_min[\"h\"])(\n      'button',\n      {\n         'class': 'btn btn-link',\n         onClick: function onClick() {\n            return Object(preact_router_es[\"route\"])('/' + props.urlStr + '/' + props.urlNm + '/chronicle');\n         }\n      },\n      'loveswake.com/' + props.urlStr + '/' + props.urlNm + '/chronicle'\n   );\n};\n\n/* harmony default export */ var ManageMemorial_PublicUrl = (PublicUrl_PublicUrl);\n// CONCATENATED MODULE: ./routes/ManageMemorial/BulkImport.js\n\n\nfunction BulkImport__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction BulkImport__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction BulkImport__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar BulkImport__ref = Object(preact_min[\"h\"])(\n   'h4',\n   null,\n   'Bulk Import'\n);\n\nvar BulkImport_BulkImport = function (_Component) {\n   BulkImport__inherits(BulkImport, _Component);\n\n   function BulkImport() {\n      var _temp, _this, _ret;\n\n      BulkImport__classCallCheck(this, BulkImport);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n         args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = BulkImport__possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n         files: [],\n         filesUploaded: 0\n      }, _this.onFileChange = function (e) {\n         _this.setState({\n            files: e.target.files,\n            filesUploaded: 0\n         });\n      }, _this.bulkImport = function () {\n         _this.setState({ filesUploaded: 0 });\n         var files = _this.state.files;\n         if (files.length === 0) {\n            alert('No files selected.');\n            return;\n         }\n         var cnt = 0;\n         var nextFile = function nextFile() {\n            return files[cnt++];\n         };\n         var newChronicle = function newChronicle(file) {\n            var reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (e) {\n               // base64 string with leading \"data:image/${mime};base64,\" stripped\n               var str = e.target.result.split(',')[1];\n               fetch(api[\"a\" /* default */] + \"!newChronicle\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                     loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                     urlNm: _this.props.urlNm,\n                     image: str\n                  })\n               }).then(function (res) {\n                  return res.json();\n               }).then(function (json) {\n                  _this.setState(function (prevState) {\n                     return { filesUploaded: prevState.filesUploaded + 1 };\n                  });\n                  newChronicle(nextFile());\n                  console.log(json);\n               });\n            };\n         };\n         newChronicle(nextFile());\n      }, _temp), BulkImport__possibleConstructorReturn(_this, _ret);\n   }\n\n   BulkImport.prototype.render = function render() {\n      return Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'row', style: 'margin-bottom:32px;' },\n         BulkImport__ref,\n         Object(preact_min[\"h\"])('input', {\n            'class': 'form-input col',\n            style: 'max-width:400px',\n            type: 'file',\n            accept: '.png, .jpg, .jpeg',\n            value: this.state.files,\n            onChange: this.onFileChange,\n            multiple: true\n         }),\n         Object(preact_min[\"h\"])(\n            'button',\n            { 'class': 'btn btn-primary col float-right',\n               onClick: this.bulkImport\n            },\n            ' Bulk Import'\n         ),\n         this.state.filesUploaded > 0 && Object(preact_min[\"h\"])(\n            'div',\n            null,\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'bar' },\n               Object(preact_min[\"h\"])('div', { 'class': 'bar-item',\n                  role: 'progressbar',\n                  style: \"width:\" + this.state.filesUploaded / this.state.files.length * 100 + \"%;\",\n                  'aria-valuenow': this.state.filesUploaded.toString(),\n                  'aria-valuemin': '0',\n                  'aria-valuemax': this.state.files.length.toString()\n               })\n            ),\n            Object(preact_min[\"h\"])(\n               'div',\n               null,\n               this.state.filesUploaded,\n               '/',\n               this.state.files.length,\n               ' uploaded'\n            )\n         )\n      );\n   };\n\n   return BulkImport;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var ManageMemorial_BulkImport = (BulkImport_BulkImport);\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/ManageMemorial/index.js\n\n\nfunction ManageMemorial__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ManageMemorial__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction ManageMemorial__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar ManageMemorial__ref = Object(preact_min[\"h\"])('div', { 'class': 'divider' });\n\nvar ManageMemorial_ManageMemorial = function (_Component) {\n   ManageMemorial__inherits(ManageMemorial, _Component);\n\n   function ManageMemorial() {\n      var _temp, _this, _ret;\n\n      ManageMemorial__classCallCheck(this, ManageMemorial);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n         args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = ManageMemorial__possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n         item: {},\n         showModal: false\n      }, _this.onChange = function (e) {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         newState[e.target.name] = e.target.value;\n         _this.setState({ oldState: newState });\n      }, _this.onFileChange = function (e) {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         newState[\"file\"] = e.target.files[0];\n         _this.setState({ oldState: newState });\n         // needed to do this as a separate step so the state\n         // updates properly. which means this is a hack.\n         _this.makeFileURL();\n      }, _this.makeFileURL = function () {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         var reader = new FileReader();\n\n         reader.onload = function (e) {\n            newState[\"src\"] = e.target.result;\n            _this.setState({ oldState: newState });\n         };\n\n         reader.readAsDataURL(_this.state.item.file);\n      }, _this.updChronicle = function () {\n         console.log('updChronicle');\n\n         // handle errors\n         if (!(_this.state.item.title && _this.state.item.start)) {\n            alert(\"A new item must have a title and a date\");\n            return;\n         }\n\n         // NOTE - this whole thing feels like a hack as the fetch call\n         // is basically repeated. look into async/await or a promise.\n\n         // if there's an image to upload...\n         if (_this.state.item.file) {\n\n            var reader = new FileReader();\n\n            reader.readAsDataURL(_this.state.item.file);\n\n            reader.onload = function (e) {\n               // base64 string without padding\n               var str = e.target.result.split(',')[1];\n\n               fetch(api[\"a\" /* default */] + \"!updChronicle\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                     loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                     urlNm: _this.props.urlNm,\n                     id: _this.state.item.id,\n                     title: _this.state.item.title,\n                     location: _this.state.item.location,\n                     date: _this.state.item.start,\n                     txt: _this.state.item.txt,\n                     image: str\n                  })\n               }).then(function (res) {\n                  return res.json();\n               }).then(function (json) {\n                  console.log(json);\n                  // UPDATE TIMELINE STATE HERE\n                  // NOTE - this may not be necessary, as new entries\n                  // will likely go into a holding container to await\n                  // editing/approval by shrine moderator\n                  // this.refs.timeline.addItem(json);\n                  // this.addItem(json);\n               }).then(_this.setState({\n                  item: {}\n               }));\n            };\n         } else {\n\n            // EDIT URL BELOW\n            fetch(api[\"a\" /* default */] + \"!updChronicle\", {\n               method: \"POST\",\n               body: JSON.stringify({\n                  loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                  urlNm: _this.props.urlNm,\n                  id: _this.state.item.id,\n                  title: _this.state.item.title,\n                  location: _this.state.item.location,\n                  date: _this.state.item.start,\n                  txt: _this.state.item.txt\n               })\n            }).then(function (res) {\n               return res.json();\n            }).then(function (json) {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               // this.addItem(json);\n            }).then(_this.setState({\n               item: {}\n            }));\n         }\n\n         _this.hideModal();\n      }, _this.newChronicle = function () {\n         console.log('newChronicle');\n         // handle errors\n         if (!(_this.state.item.title && _this.state.item.start)) {\n            alert(\"A new item must have a title and a date\");\n            return;\n         }\n\n         // NOTE - this whole thing feels like a hack as the fetch call\n         // is basically repeated. look into async/await or a promise.\n\n         // if there's an image to upload...\n         if (_this.state.item.file) {\n\n            var reader = new FileReader();\n\n            reader.readAsDataURL(_this.state.item.file);\n\n            reader.onload = function (e) {\n               // NOTE - must remove padding for picolisp\n               //\n               // base64 strings are padded with one or two '='s to make sure it aligns\n               // to proper byte boundaries. the picolisp server does not handle this \n               // well. so we must remove any padding before it is sent. after picolisp\n               // has parsed the http request, we can add the appropriate padding back\n               // to the string by checking if it is an even multiple of 4.\n               //\n               // see 'server.l' for the picolisp side.\n               //\n               // NOTE - turns out that we don't need to add padding back on the server\n               // as the base64 utility is still able to decode.\n\n               // base64 string without padding\n               var str = e.target.result.split(',')[1];\n\n               fetch(api[\"a\" /* default */] + \"!newChronicle\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                     urlNm: _this.props.urlNm,\n                     title: _this.state.item.title,\n                     subtitle: _this.state.item.subtitle,\n                     location: _this.state.item.location,\n                     date: _this.state.item.start,\n                     txt: _this.state.item.txt,\n                     image: str\n                  })\n               }).then(function (res) {\n                  return res.json();\n               }).then(function (json) {\n                  console.log(json);\n                  // UPDATE TIMELINE STATE HERE\n                  // NOTE - this may not be necessary, as new entries\n                  // will likely go into a holding container to await\n                  // editing/approval by shrine moderator\n                  // this.refs.timeline.addItem(json);\n                  _this.addItem(json);\n               }).then(_this.setState({\n                  item: {}\n               }));\n            };\n         } else {\n\n            // EDIT URL BELOW\n            fetch(api[\"a\" /* default */] + \"!newChronicle\", {\n               method: \"POST\",\n               body: JSON.stringify({\n                  urlNm: _this.props.urlNm,\n                  title: _this.state.item.title,\n                  subtitle: _this.state.item.subtitle,\n                  location: _this.state.item.location,\n                  date: _this.state.item.start,\n                  txt: _this.state.item.txt\n               })\n            }).then(function (res) {\n               return res.json();\n            }).then(function (json) {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               _this.addItem(json);\n            }).then(_this.setState({\n               item: {}\n            }));\n         }\n\n         _this.hideModal();\n      }, _this.showModal = function (id) {\n         var memorial = _this.props.user.memorials.find(function (m) {\n            return m.urlNm === _this.props.urlNm;\n         });\n         _this.setState({ showModal: true, item: memorial.items.find(function (item) {\n               return item.id === id;\n            }) });\n      }, _this.hideModal = function () {\n         var oldItem = _this.state.item;\n         var newItem = _this.state.item;\n         newItem[\"edited\"] = true;\n         _this.setState({\n            showModal: false,\n            modalError: false,\n            oldItem: newItem\n         });\n      }, _this.newItem = function () {\n         _this.showModal();\n         _this.setState({ item: {} });\n      }, _temp), ManageMemorial__possibleConstructorReturn(_this, _ret);\n   }\n\n   ManageMemorial.prototype.render = function render() {\n      var _this2 = this;\n\n      var memorial = this.props.user.memorials.find(function (m) {\n         return m.urlNm === _this2.props.urlNm;\n      });\n      return Object(preact_min[\"h\"])(GridContainer[\"a\" /* default */], {\n         avatarColumn: Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'menu', style: 'z-index:1;' },\n            Object(preact_min[\"h\"])(\n               'figure',\n               { 'class': 'centered avatar avatar-xxl' },\n               Object(preact_min[\"h\"])('img', { src: memorial.avatar })\n            ),\n            Object(preact_min[\"h\"])(\n               'h3',\n               { 'class': 'text-center mt-2' },\n               memorial.nm\n            ),\n            ManageMemorial__ref,\n            Object(preact_min[\"h\"])(\n               'li',\n               { 'class': 'menu-item' },\n               Object(preact_min[\"h\"])(\n                  preact_router_es[\"Link\"],\n                  { 'class': 'menu-item', href: \"/\" + memorial.urlStr + \"/\" + memorial.urlNm + \"/chronicle\" },\n                  'View Chronicle'\n               )\n            )\n         ),\n         contentColumn: Object(preact_min[\"h\"])(\n            'div',\n            null,\n            Object(preact_min[\"h\"])(ManageMemorial_BulkImport, {\n               urlNm: memorial.urlNm\n            }),\n            Object(preact_min[\"h\"])(ManageMemorial_ContentList, {\n               showModal: this.showModal,\n               items: memorial.items,\n               newItem: this.newItem\n            }),\n            Object(preact_min[\"h\"])(ManageMemorial_EditModal, {\n               showModal: this.state.showModal,\n               hideModal: this.hideModal,\n\n               updChronicle: this.updChronicle,\n               newChronicle: this.newChronicle,\n\n               onChange: this.onChange,\n               onFileChange: this.onFileChange,\n\n               item: this.state.item\n            })\n         )\n      });\n   };\n\n   return ManageMemorial;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var lib__ref__0_routes_ManageMemorial = __webpack_exports__[\"default\"] = (ManageMemorial_ManageMemorial);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-ManageMemorial.chunk.27561.js","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\n\nconst ContentList = (props) => (\n   <div>\n      <div class=\"row\">\n         <h4 class=\"col\">Chronicle Items</h4>\n         <div class=\"col\" />\n         <button\n            class=\"col btn btn-primary\"\n            onClick={props.newItem}\n         >\n            Add Item\n         </button>\n      </div>\n      <div class=\"divider\" />\n      <div\n         style={\n            \"display:flex;\"\n            + \"flex-direction:row;\"\n            + \"flex-wrap:wrap;\"\n            + \"align-items:flex-start;\"\n            + \"justify-content:center;\"\n         }\n      >\n         { \n            props.items.map((item) => (\n                  <ContentCard\n                     id={item.id}\n                     title={item.title} \n                     date={item.start} \n                     location={item.location} \n                     src={item.src}\n                     showModal={(id) => props.showModal(id)}\n                     edited={item.edited}\n                  />\n            ))\n         }\n      </div>\n   </div>\n)\n\nconst ContentCard = (props) => (\n   <div class=\"card m-2\" style={\"width:200px;\"}>\n      { props.src &&\n            <img class=\"responsive-img mt-2 mx-2 centered\" src={props.src} style=\"max-width:182px\"/>\n      }\n      <div class=\"card-body\">\n         <div class=\"h6 text-ellipsis\">{props.title}</div>\n         <div class=\"text-gray text-ellipsis\" style=\"font-size:smaller;\">{props.location}</div>\n         <div class=\"text-gray\" style=\"font-size:smaller;\">{props.date}</div>\n      </div>\n      <div class=\"card-footer\">\n         <button \n            class=\"btn btn-sm float-right\"\n            onClick={(id) => props.showModal(props.id)}\n         > \n            edit\n         </button>\n      </div>\n   </div>\n)\n\nexport default ContentList;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/ContentList.js","import { h, Component } from 'preact';\n\nconst EditCard = (props) => (\n\n   <div class={ \"panel\" }>\n\n      <div class=\"panel-body mt-2\">\n\n         {/* no need to render image if it doesn't exist */}\n         { props.item.src &&\n            <img \n               src={props.item.src} \n               alt={props.item.title} \n               class=\"img-responsive my-2\"\n            />\n         }\n\n         <h4>{props.item.title}</h4>\n\n         <div class=\"text-gray d-inline\">{props.item.location}</div> \n         <div class=\"text-gray d-inline mx-2\">{props.item.start}</div>\n\n         <p>{props.item.caption}</p>\n\n      </div>\n\n      {/*\n      <div class=\"card-footer\">\n         <button class=\"btn btn-primary\">Do</button>\n      </div>\n      */}\n\n   </div>\n)\n\nexport default EditCard;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/EditCard.js","import { h, Component } from 'preact';\nimport classnames from 'classnames';\nimport { TextArea, TextInput, DateInput } from '../../components/form-inputs';\nimport EditCard from './EditCard';\n\n// edit a chronicle item\nclass EditModal extends Component {\n\n   render (props) {\n      let modalClasses = classnames(\n         \"modal\", \"modal-lg\", { \"active\": props.showModal }, { \"has-error\": props.modalError}\n      );\n\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.client.width;\n\n      return (\n         <div class={modalClasses}>\n\n            <a onClick={props.hideModal} \n               class=\"modal-overlay\" \n               aria-label=\"Close\" \n            />\n\n            <div class=\"modal-container\">\n\n               <div class=\"modal-header\">\n\n                  <a onClick={props.hideModal} \n                     class=\"btn btn-clear float-right\" \n                     aria-label=\"Close\"\n                  />\n\n                  <div class=\"modal-title h5\">\n                     { props.item.id ?\n                        \"Edit Item\"\n                           :\n                        \"Add Item\"\n                     }\n                  </div>\n\n               { width < 840 &&\n                  <div class=\"text-center text-gray\" style=\"font-size:smaller;\">\n                     - Scroll down to see a preview -\n                  </div>\n               }\n\n               </div>\n\n               <div class=\"modal-body\">\n                  <div class={ width < 840 ? \"content\" : \"content container columns\"}>\n\n                     <form class={ width < 840 ? \"form-group\" : \"form-group column col-5\"}>\n\n                        <TextInput \n                           label=\"Title\" \n                           name=\"title\" \n                           value={props.item.title} \n                           onChange={props.onChange} \n                        />\n\n                        <TextInput \n                           label=\"Location\" \n                           name=\"location\"\n                           value={props.item.location}\n                           onChange={props.onChange}\n                        />\n\n                        <DateInput \n                           label=\"Date\" \n                           name=\"start\"\n                           value={props.item.start}\n                           onChange={props.onChange}\n                        />\n\n                        <label\n                           class=\"form-label\"\n                        >\n                           Change photo\n                           <input \n                              class=\"form-input\"\n                              type=\"file\" \n                              accept=\".jpg, .jpeg, .png\"\n                              value={props.item.file} \n                              onChange={props.onFileChange}\n                           />\n                        </label>\n\n                     </form>\n\n                     <div class={ width < 840 ? \"\" : \"column col-7\" }>\n                        <EditCard item={props.item} />\n                     </div>\n\n                  </div>\n\n               </div>\n\n\n               <div class=\"modal-footer\">\n\n                  <button \n                     class=\"btn btn-primary\"\n                     onClick={ props.item.id ? props.updChronicle : props.newChronicle } \n                  >\n                     { props.item.id ?\n                        \"Update item\"\n                           :\n                        \"Add item\"\n                     }\n                  </button>\n\n               </div>\n\n            </div>\n\n         </div>\n      );\n   }\n\n}\n\nexport default EditModal;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/EditModal.js","import { h, Component } from 'preact';\nimport API_ENDPOINT from '../../api';\n\nclass BulkImport extends Component {\n   state = {\n      files: [],\n      filesUploaded: 0\n   }\n\n   onFileChange = (e) => {\n      this.setState({\n         files: e.target.files,\n         filesUploaded: 0\n      });\n   }\n\n   bulkImport = () => {\n      this.setState({ filesUploaded: 0 });\n      var files = this.state.files;\n      if (files.length === 0) { \n         alert('No files selected.');\n         return; \n      }\n      var cnt = 0;\n      var nextFile = () => {\n         return files[cnt++];\n      }\n      var newChronicle = (file) => {\n         let reader = new FileReader();\n         reader.readAsDataURL(file);\n         reader.onload = (e) => {\n            // base64 string with leading \"data:image/${mime};base64,\" stripped\n            let str = e.target.result.split(',')[1]\n            fetch( API_ENDPOINT + \"!newChronicle\", { \n               method: \"POST\", \n               body: JSON.stringify({ \n                  loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                  urlNm: this.props.urlNm,\n                  image: str\n               }) \n            })\n            .then(res => res.json())\n            .then(json => {\n               this.setState((prevState) => ({ filesUploaded: prevState.filesUploaded + 1 }));\n               newChronicle(nextFile());\n               console.log(json);\n            })\n         }\n      }\n      newChronicle(nextFile());\n   }\n\n   render () {\n      return (\n         <div class=\"row\" style=\"margin-bottom:32px;\">\n            <h4>Bulk Import</h4>\n            <input \n               class=\"form-input col\"\n               style=\"max-width:400px\"\n               type=\"file\" \n               accept=\".png, .jpg, .jpeg\" \n               value={this.state.files}\n               onChange={this.onFileChange}\n               multiple \n            />\n            <button class=\"btn btn-primary col float-right\"\n               onClick={this.bulkImport}\n            > Bulk Import\n            </button>\n            { this.state.filesUploaded > 0 &&\n               <div>\n                  <div class=\"bar\">\n                     <div class=\"bar-item\"\n                        role=\"progressbar\"\n                        style={\"width:\" + (this.state.filesUploaded / this.state.files.length * 100) + \"%;\"}\n                        aria-valuenow={this.state.filesUploaded.toString()} \n                        aria-valuemin=\"0\" \n                        aria-valuemax={this.state.files.length.toString()}\n                     />\n                  </div>\n                  <div>{this.state.filesUploaded}/{this.state.files.length} uploaded</div>\n               </div>\n            }\n         </div>\n      );\n   }\n}\n\nexport default BulkImport;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/BulkImport.js","import { h, Component } from 'preact';\nimport API_ENDPOINT from '../../api';\nimport { Link } from 'preact-router';\n\nimport GridContainer from '../../components/GridContainer';\n\nimport ContentList from './ContentList';\nimport EditModal from './EditModal';\nimport PublicUrl from './PublicUrl';\nimport BulkImport from './BulkImport';\n\nclass ManageMemorial extends Component {\n   state = {\n      item: {},\n      showModal: false,\n   }\n\n   onChange = (e) => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      newState[e.target.name] = e.target.value;\n      this.setState({ oldState: newState });\n   }\n\n   onFileChange = (e) => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      newState[\"file\"] = e.target.files[0];\n      this.setState({ oldState: newState });\n      // needed to do this as a separate step so the state\n      // updates properly. which means this is a hack.\n      this.makeFileURL();\n   }\n\n   makeFileURL = () => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      let reader = new FileReader();\n\n      reader.onload = (e) => {\n        newState[\"src\"] = e.target.result;\n        this.setState({ oldState: newState })\n      }\n\n      reader.readAsDataURL(this.state.item.file);\n   }\n\n   updChronicle = () => {\n      console.log('updChronicle');\n\n      // handle errors\n      if (!(this.state.item.title && this.state.item.start)) {\n         alert(\"A new item must have a title and a date\");\n         return;\n      }\n\n      // NOTE - this whole thing feels like a hack as the fetch call\n      // is basically repeated. look into async/await or a promise.\n\n      // if there's an image to upload...\n      if (this.state.item.file) {\n\n         let reader = new FileReader();\n\n         reader.readAsDataURL(this.state.item.file);\n\n         reader.onload = (e) => {\n            // base64 string without padding\n            let str = e.target.result.split(',')[1]\n\n            fetch( API_ENDPOINT + \"!updChronicle\",\n               { \n                  method: \"POST\", \n                  body: JSON.stringify({ \n                     loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                     urlNm: this.props.urlNm,\n                     id: this.state.item.id,\n                     title: this.state.item.title,\n                     location: this.state.item.location,\n                     date: this.state.item.start,\n                     txt: this.state.item.txt,\n                     image: str\n                  }) \n               }\n            )\n            .then( res => res.json() )\n            .then( json => {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               // this.addItem(json);\n            })\n            .then( this.setState({ \n               item: {}\n            }));\n            \n         }\n\n      } else {\n\n         // EDIT URL BELOW\n         fetch( API_ENDPOINT + \"!updChronicle\",\n            { \n               method: \"POST\", \n               body: JSON.stringify({ \n                  loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                  urlNm: this.props.urlNm,\n                  id: this.state.item.id,\n                  title: this.state.item.title,\n                  location: this.state.item.location,\n                  date: this.state.item.start,\n                  txt: this.state.item.txt,\n               }) \n            }\n         )\n         .then( res => res.json() )\n         .then( json => {\n            console.log(json);\n            // UPDATE TIMELINE STATE HERE\n            // NOTE - this may not be necessary, as new entries\n            // will likely go into a holding container to await\n            // editing/approval by shrine moderator\n            // this.refs.timeline.addItem(json);\n            // this.addItem(json);\n         })\n         .then( this.setState({ \n            item: {}\n         }));\n\n      }\n\n      this.hideModal();\n   }\n\n   newChronicle = () => {\n      console.log('newChronicle');\n      // handle errors\n      if (!(this.state.item.title && this.state.item.start)) {\n         alert(\"A new item must have a title and a date\");\n         return;\n      }\n\n      // NOTE - this whole thing feels like a hack as the fetch call\n      // is basically repeated. look into async/await or a promise.\n\n      // if there's an image to upload...\n      if (this.state.item.file) {\n\n         let reader = new FileReader();\n\n         reader.readAsDataURL(this.state.item.file);\n\n         reader.onload = (e) => {\n            // NOTE - must remove padding for picolisp\n            //\n            // base64 strings are padded with one or two '='s to make sure it aligns\n            // to proper byte boundaries. the picolisp server does not handle this \n            // well. so we must remove any padding before it is sent. after picolisp\n            // has parsed the http request, we can add the appropriate padding back\n            // to the string by checking if it is an even multiple of 4.\n            //\n            // see 'server.l' for the picolisp side.\n            //\n            // NOTE - turns out that we don't need to add padding back on the server\n            // as the base64 utility is still able to decode.\n\n            // base64 string without padding\n            let str = e.target.result.split(',')[1]\n\n            fetch( API_ENDPOINT + \"!newChronicle\",\n               { \n                  method: \"POST\", \n                  body: JSON.stringify({ \n                     urlNm: this.props.urlNm,\n                     title: this.state.item.title,\n                     subtitle: this.state.item.subtitle,\n                     location: this.state.item.location,\n                     date: this.state.item.start,\n                     txt: this.state.item.txt,\n                     image: str\n                  }) \n               }\n            )\n            .then( res => res.json() )\n            .then( json => {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               this.addItem(json);\n            })\n            .then( this.setState({ \n               item: {}\n            }));\n            \n         }\n\n      } else {\n\n         // EDIT URL BELOW\n         fetch( API_ENDPOINT + \"!newChronicle\",\n            { \n               method: \"POST\", \n               body: JSON.stringify({ \n                  urlNm: this.props.urlNm,\n                  title: this.state.item.title,\n                  subtitle: this.state.item.subtitle,\n                  location: this.state.item.location,\n                  date: this.state.item.start,\n                  txt: this.state.item.txt,\n               }) \n            }\n         )\n         .then( res => res.json() )\n         .then( json => {\n            console.log(json);\n            // UPDATE TIMELINE STATE HERE\n            // NOTE - this may not be necessary, as new entries\n            // will likely go into a holding container to await\n            // editing/approval by shrine moderator\n            // this.refs.timeline.addItem(json);\n            this.addItem(json);\n         })\n         .then( this.setState({ \n            item: {}\n         }));\n\n      }\n\n      this.hideModal();\n   }\n\n   showModal = (id) => {\n      let memorial = this.props.user.memorials.find(m => m.urlNm === this.props.urlNm);\n      this.setState({ showModal: true, item: memorial.items.find(item => item.id === id) });\n   }\n\n   hideModal = () => {\n      let oldItem = this.state.item;\n      let newItem = this.state.item;\n      newItem[\"edited\"] = true;\n      this.setState({ \n         showModal: false, \n         modalError: false,\n         oldItem: newItem\n      });\n   }\n\n   newItem = () => {\n      this.showModal();\n      this.setState({ item: {} });\n   }\n\n   render () {\n      let memorial = this.props.user.memorials.find(m => m.urlNm === this.props.urlNm);\n      return (\n         <GridContainer\n            avatarColumn={\n               <div class=\"menu\" style=\"z-index:1;\">\n                     <figure class=\"centered avatar avatar-xxl\"> \n                        <img src={memorial.avatar} />\n                     </figure>\n                     <h3 class=\"text-center mt-2\">{memorial.nm}</h3>\n                     <div class=\"divider\" />\n                     <li class=\"menu-item\">\n                        <Link class=\"menu-item\" href={\"/\" + memorial.urlStr + \"/\" + memorial.urlNm + \"/chronicle\"}>\n                           View Chronicle\n                        </Link>\n                     </li>\n               </div>\n            }\n            contentColumn={\n               <div>\n                  {/*\n                  <PublicUrl \n                     nm1={memorial.nm1} \n                     urlStr={memorial.urlStr} \n                     urlNm={memorial.urlNm}\n                  />\n                  */}\n                  <BulkImport \n                     urlNm={memorial.urlNm}\n                  />\n                  <ContentList \n                     showModal={this.showModal} \n                     items={memorial.items} \n                     newItem={this.newItem}\n                  />\n                  <EditModal \n                     showModal={this.state.showModal}\n                     hideModal={this.hideModal}\n\n                     updChronicle={this.updChronicle}\n                     newChronicle={this.newChronicle}\n\n                     onChange={this.onChange}\n                     onFileChange={this.onFileChange}\n\n                     item={this.state.item}\n                  />\n               </div>\n            }\n         />\n      )\n   }\n}\n\nexport default ManageMemorial;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/index.js"],"sourceRoot":""}