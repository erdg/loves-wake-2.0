{"version":3,"sources":["webpack:///route-ManageMemorial.chunk.66374.js","webpack:///./routes/ManageMemorial/ContentList.js","webpack:///./routes/ManageMemorial/EditCard.js","webpack:///./routes/ManageMemorial/EditModal.js","webpack:///./routes/ManageMemorial/PublicUrl.js","webpack:///./routes/ManageMemorial/index.js"],"names":["webpackJsonp","FoBm","module","__webpack_exports__","__webpack_require__","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ManageMemorial__classCallCheck","instance","Constructor","ManageMemorial__possibleConstructorReturn","ManageMemorial__inherits","defineProperty","preact_min","api","preact_router_es","_ref","ContentList_ContentList","props","class","onClick","newItem","items","map","item","ContentList_ContentTile","id","title","date","start","location","src","showModal","edited","style","ManageMemorial_ContentList","classnames","classnames_default","n","form_inputs","EditCard_EditCard","alt","caption","ManageMemorial_EditCard","EditModal_EditModal","_Component","EditModal","this","apply","arguments","render","modalClasses","active","has-error","modalError","hideModal","aria-label","label","name","onChange","type","accept","file","onFileChange","updChronicle","newChronicle","ManageMemorial_EditModal","PublicUrl_PublicUrl","nm1","urlStr","urlNm","ManageMemorial_PublicUrl","ManageMemorial_ManageMemorial","ManageMemorial","_temp","_this","_ret","_len","length","args","Array","_key","concat","state","e","newState","target","setState","oldState","files","makeFileURL","reader","FileReader","onload","result","readAsDataURL","console","log","alert","str","split","fetch","method","body","JSON","stringify","loginToken","window","sessionStorage","getItem","txt","image","then","res","json","subtitle","addItem","memorial","user","memorials","find","m","oldItem","_this2","nm","avatar"],"mappings":"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","file":"route-ManageMemorial.chunk.66374.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ \"FoBm\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ./api/index.js\nvar api = __webpack_require__(\"/C1n\");\n\n// EXTERNAL MODULE: ../node_modules/preact-router/dist/preact-router.es.js\nvar preact_router_es = __webpack_require__(\"/QC5\");\n\n// CONCATENATED MODULE: ./routes/ManageMemorial/ContentList.js\n\n\n\n\nvar _ref = Object(preact_min[\"h\"])(\n   'h3',\n   null,\n   'Items'\n);\n\nvar ContentList_ContentList = function ContentList(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      null,\n      _ref,\n      Object(preact_min[\"h\"])(\n         'button',\n         {\n            'class': 'btn btn-primary',\n            onClick: props.newItem\n         },\n         'Add Item'\n      ),\n      props.items.map(function (item) {\n         return Object(preact_min[\"h\"])(ContentList_ContentTile, {\n            id: item.id,\n            title: item.title,\n            date: item.start,\n            location: item.location,\n            src: item.src,\n            showModal: function showModal(id) {\n               return props.showModal(id);\n            },\n            edited: item.edited\n         });\n      })\n   );\n};\n\nvar ContentList_ContentTile = function ContentTile(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      { 'class': 'tile', style: \"max-width: 500px;\" + (props.edited ? \"background:lightcoral;\" : \"\") },\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'tile-icon' },\n         Object(preact_min[\"h\"])('img', { 'class': 'responsive-img', src: props.src, style: 'max-width:200px' })\n      ),\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'tile-content' },\n         Object(preact_min[\"h\"])(\n            'p',\n            { 'class': 'tile-title' },\n            props.title\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'tile-subtitle text-gray' },\n            props.location\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'tile-subtitle text-gray' },\n            props.date\n         )\n      ),\n      Object(preact_min[\"h\"])(\n         'div',\n         { 'class': 'tile-action' },\n         Object(preact_min[\"h\"])(\n            'button',\n            {\n               'class': 'btn',\n               onClick: function onClick(id) {\n                  return props.showModal(props.id);\n               }\n            },\n            'Edit item'\n         )\n      )\n   );\n};\n\n/* harmony default export */ var ManageMemorial_ContentList = (ContentList_ContentList);\n// EXTERNAL MODULE: ../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"9qb7\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./components/form-inputs/index.js\nvar form_inputs = __webpack_require__(\"AM5m\");\n\n// CONCATENATED MODULE: ./routes/ManageMemorial/EditCard.js\n\n\n\nvar EditCard_EditCard = function EditCard(props) {\n   return Object(preact_min[\"h\"])(\n      \"div\",\n      { \"class\": \"panel\" },\n      Object(preact_min[\"h\"])(\n         \"div\",\n         { \"class\": \"panel-body mt-2\" },\n         props.item.src && Object(preact_min[\"h\"])(\"img\", {\n            src: props.item.src,\n            alt: props.item.title,\n            \"class\": \"img-responsive my-2\"\n         }),\n         Object(preact_min[\"h\"])(\n            \"h4\",\n            null,\n            props.item.title\n         ),\n         Object(preact_min[\"h\"])(\n            \"div\",\n            { \"class\": \"text-gray d-inline\" },\n            props.item.location\n         ),\n         Object(preact_min[\"h\"])(\n            \"div\",\n            { \"class\": \"text-gray d-inline mx-2\" },\n            props.item.start\n         ),\n         Object(preact_min[\"h\"])(\n            \"p\",\n            null,\n            props.item.caption\n         )\n      )\n   );\n};\n\n/* harmony default export */ var ManageMemorial_EditCard = (EditCard_EditCard);\n// CONCATENATED MODULE: ./routes/ManageMemorial/EditModal.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n// edit a chronicle item\n\nvar EditModal_EditModal = function (_Component) {\n   _inherits(EditModal, _Component);\n\n   function EditModal() {\n      _classCallCheck(this, EditModal);\n\n      return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   EditModal.prototype.render = function render(props) {\n      var modalClasses = classnames_default()(\"modal\", \"modal-lg\", { \"active\": props.showModal }, { \"has-error\": props.modalError });\n\n      return Object(preact_min[\"h\"])(\n         'div',\n         { 'class': modalClasses },\n         Object(preact_min[\"h\"])('a', { onClick: props.hideModal,\n            'class': 'modal-overlay',\n            'aria-label': 'Close'\n         }),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'modal-container' },\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-header' },\n               Object(preact_min[\"h\"])('a', { onClick: props.hideModal,\n                  'class': 'btn btn-clear float-right',\n                  'aria-label': 'Close'\n               }),\n               Object(preact_min[\"h\"])(\n                  'div',\n                  { 'class': 'modal-title h5' },\n                  props.item.id ? \"Edit Item\" : \"Add Item\"\n               )\n            ),\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-body' },\n               Object(preact_min[\"h\"])(\n                  'div',\n                  { 'class': 'content container columns' },\n                  Object(preact_min[\"h\"])(\n                     'div',\n                     { 'class': 'column col-6' },\n                     Object(preact_min[\"h\"])(ManageMemorial_EditCard, { item: props.item })\n                  ),\n                  Object(preact_min[\"h\"])(\n                     'form',\n                     { 'class': 'form-group column col-6' },\n                     Object(preact_min[\"h\"])(form_inputs[\"e\" /* TextInput */], {\n                        label: 'Title',\n                        name: 'title',\n                        value: props.item.title,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(form_inputs[\"e\" /* TextInput */], {\n                        label: 'Location',\n                        name: 'location',\n                        value: props.item.location,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(form_inputs[\"a\" /* DateInput */], {\n                        label: 'Date',\n                        name: 'start',\n                        value: props.item.start,\n                        onChange: props.onChange\n                     }),\n                     Object(preact_min[\"h\"])(\n                        'label',\n                        {\n                           'class': 'form-label'\n                        },\n                        'Change photo',\n                        Object(preact_min[\"h\"])('input', {\n                           'class': 'form-input',\n                           type: 'file',\n                           accept: '.jpg, .jpeg, .png',\n                           value: props.item.file,\n                           onChange: props.onFileChange\n                        })\n                     )\n                  )\n               )\n            ),\n            Object(preact_min[\"h\"])(\n               'div',\n               { 'class': 'modal-footer' },\n               Object(preact_min[\"h\"])(\n                  'button',\n                  {\n                     'class': 'btn btn-primary',\n                     onClick: props.item.id ? props.updChronicle : props.newChronicle\n                  },\n                  props.item.id ? \"Update item\" : \"Add item\"\n               )\n            )\n         )\n      );\n   };\n\n   return EditModal;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var ManageMemorial_EditModal = (EditModal_EditModal);\n// CONCATENATED MODULE: ./routes/ManageMemorial/PublicUrl.js\n\n\n\nvar PublicUrl_PublicUrl = function PublicUrl(props) {\n   return Object(preact_min[\"h\"])(\n      'p',\n      null,\n      'The public url for ',\n      props.nm1,\n      '\\'s Chronicle is',\n      Object(preact_min[\"h\"])(\n         'button',\n         {\n            'class': 'btn btn-link',\n            onClick: function onClick() {\n               return Object(preact_router_es[\"route\"])('/' + props.urlStr + '/' + props.urlNm + '/chronicle');\n            }\n         },\n         '/' + props.urlStr + '/' + props.urlNm + '/chronicle'\n      )\n   );\n};\n\n/* harmony default export */ var ManageMemorial_PublicUrl = (PublicUrl_PublicUrl);\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/ManageMemorial/index.js\n\n\nfunction ManageMemorial__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ManageMemorial__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction ManageMemorial__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar ManageMemorial_ManageMemorial = function (_Component) {\n   ManageMemorial__inherits(ManageMemorial, _Component);\n\n   function ManageMemorial() {\n      var _temp, _this, _ret;\n\n      ManageMemorial__classCallCheck(this, ManageMemorial);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n         args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = ManageMemorial__possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n         item: {},\n         showModal: false\n      }, _this.onChange = function (e) {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         newState[e.target.name] = e.target.value;\n         _this.setState({ oldState: newState });\n      }, _this.onFileChange = function (e) {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         newState[\"file\"] = e.target.files[0];\n         _this.setState({ oldState: newState });\n         // needed to do this as a separate step so the state\n         // updates properly. which means this is a hack.\n         _this.makeFileURL();\n      }, _this.makeFileURL = function () {\n         var oldState = _this.state.item;\n         var newState = _this.state.item;\n         var reader = new FileReader();\n\n         reader.onload = function (e) {\n            newState[\"src\"] = e.target.result;\n            _this.setState({ oldState: newState });\n         };\n\n         reader.readAsDataURL(_this.state.item.file);\n      }, _this.updChronicle = function () {\n         console.log('updChronicle');\n\n         // handle errors\n         if (!(_this.state.item.title && _this.state.item.start)) {\n            alert(\"A new item must have a title and a date\");\n            return;\n         }\n\n         // NOTE - this whole thing feels like a hack as the fetch call\n         // is basically repeated. look into async/await or a promise.\n\n         // if there's an image to upload...\n         if (_this.state.item.file) {\n\n            var reader = new FileReader();\n\n            reader.readAsDataURL(_this.state.item.file);\n\n            reader.onload = function (e) {\n               // NOTE - must remove padding for picolisp\n               //\n               // base64 strings are padded with one or two '='s to make sure it aligns\n               // to proper byte boundaries. the picolisp server does not handle this \n               // well. so we must remove any padding before it is sent. after picolisp\n               // has parsed the http request, we can add the appropriate padding back\n               // to the string by checking if it is an even multiple of 4.\n               //\n               // see 'server.l' for the picolisp side.\n               //\n               // NOTE - turns out that we don't need to add padding back on the server\n               // as the base64 utility is still able to decode.\n\n               // base64 string without padding\n               var str = e.target.result.split('=')[0];\n\n               fetch(api[\"a\" /* default */] + \"!updChronicle?\" + _this.props.urlNm, {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                     loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                     id: _this.state.item.id,\n                     title: _this.state.item.title,\n                     location: _this.state.item.location,\n                     date: _this.state.item.start,\n                     txt: _this.state.item.txt,\n                     image: str\n                  })\n               }).then(function (res) {\n                  return res.json();\n               }).then(function (json) {\n                  console.log(json);\n                  // UPDATE TIMELINE STATE HERE\n                  // NOTE - this may not be necessary, as new entries\n                  // will likely go into a holding container to await\n                  // editing/approval by shrine moderator\n                  // this.refs.timeline.addItem(json);\n                  // this.addItem(json);\n               }).then(_this.setState({\n                  item: {}\n               }));\n            };\n         } else {\n\n            // EDIT URL BELOW\n            fetch(api[\"a\" /* default */] + \"!updChronicle?\" + _this.props.urlNm, {\n               method: \"POST\",\n               body: JSON.stringify({\n                  loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                  id: _this.state.item.id,\n                  title: _this.state.item.title,\n                  location: _this.state.item.location,\n                  date: _this.state.item.start,\n                  txt: _this.state.item.txt\n               })\n            }).then(function (res) {\n               return res.json();\n            }).then(function (json) {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               // this.addItem(json);\n            }).then(_this.setState({\n               item: {}\n            }));\n         }\n\n         _this.hideModal();\n      }, _this.newChronicle = function () {\n         console.log('newChronicle');\n         // handle errors\n         if (!(_this.state.item.title && _this.state.item.start)) {\n            alert(\"A new item must have a title and a date\");\n            return;\n         }\n\n         // NOTE - this whole thing feels like a hack as the fetch call\n         // is basically repeated. look into async/await or a promise.\n\n         // if there's an image to upload...\n         if (_this.state.item.file) {\n\n            var reader = new FileReader();\n\n            reader.readAsDataURL(_this.state.item.file);\n\n            reader.onload = function (e) {\n               // NOTE - must remove padding for picolisp\n               //\n               // base64 strings are padded with one or two '='s to make sure it aligns\n               // to proper byte boundaries. the picolisp server does not handle this \n               // well. so we must remove any padding before it is sent. after picolisp\n               // has parsed the http request, we can add the appropriate padding back\n               // to the string by checking if it is an even multiple of 4.\n               //\n               // see 'server.l' for the picolisp side.\n               //\n               // NOTE - turns out that we don't need to add padding back on the server\n               // as the base64 utility is still able to decode.\n\n               // base64 string without padding\n               var str = e.target.result.split('=')[0];\n\n               fetch(api[\"a\" /* default */] + \"!postChronicle?\" + _this.props.urlNm, {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                     title: _this.state.item.title,\n                     subtitle: _this.state.item.subtitle,\n                     location: _this.state.item.location,\n                     date: _this.state.item.start,\n                     txt: _this.state.item.txt,\n                     image: str\n                  })\n               }).then(function (res) {\n                  return res.json();\n               }).then(function (json) {\n                  console.log(json);\n                  // UPDATE TIMELINE STATE HERE\n                  // NOTE - this may not be necessary, as new entries\n                  // will likely go into a holding container to await\n                  // editing/approval by shrine moderator\n                  // this.refs.timeline.addItem(json);\n                  _this.addItem(json);\n               }).then(_this.setState({\n                  item: {}\n               }));\n            };\n         } else {\n\n            // EDIT URL BELOW\n            fetch(api[\"a\" /* default */] + \"!postChronicle?\" + _this.props.urlNm, {\n               method: \"POST\",\n               body: JSON.stringify({\n                  title: _this.state.item.title,\n                  subtitle: _this.state.item.subtitle,\n                  location: _this.state.item.location,\n                  date: _this.state.item.start,\n                  txt: _this.state.item.txt\n               })\n            }).then(function (res) {\n               return res.json();\n            }).then(function (json) {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               _this.addItem(json);\n            }).then(_this.setState({\n               item: {}\n            }));\n         }\n\n         _this.hideModal();\n      }, _this.showModal = function (id) {\n         var memorial = _this.props.user.memorials.find(function (m) {\n            return m.urlNm === _this.props.urlNm;\n         });\n         _this.setState({ showModal: true, item: memorial.items.find(function (item) {\n               return item.id === id;\n            }) });\n      }, _this.hideModal = function () {\n         var oldItem = _this.state.item;\n         var newItem = _this.state.item;\n         newItem[\"edited\"] = true;\n         _this.setState({\n            showModal: false,\n            modalError: false,\n            oldItem: newItem\n         });\n      }, _this.newItem = function () {\n         _this.showModal();\n         _this.setState({ item: {} });\n      }, _temp), ManageMemorial__possibleConstructorReturn(_this, _ret);\n   }\n\n   ManageMemorial.prototype.render = function render() {\n      var _this2 = this;\n\n      var memorial = this.props.user.memorials.find(function (m) {\n         return m.urlNm === _this2.props.urlNm;\n      });\n      return Object(preact_min[\"h\"])(\n         'div',\n         null,\n         Object(preact_min[\"h\"])(\n            'h2',\n            null,\n            memorial.nm\n         ),\n         Object(preact_min[\"h\"])(\n            'figure',\n            { 'class': 'avatar avatar-xxl' },\n            Object(preact_min[\"h\"])('img', { src: memorial.avatar })\n         ),\n         Object(preact_min[\"h\"])(ManageMemorial_PublicUrl, { nm1: memorial.nm1, urlStr: memorial.urlStr, urlNm: memorial.urlNm }),\n         Object(preact_min[\"h\"])(ManageMemorial_ContentList, {\n            showModal: this.showModal,\n            items: memorial.items,\n            newItem: this.newItem\n         }),\n         Object(preact_min[\"h\"])(ManageMemorial_EditModal, {\n            showModal: this.state.showModal,\n            hideModal: this.hideModal,\n\n            updChronicle: this.updChronicle,\n            newChronicle: this.newChronicle,\n\n            onChange: this.onChange,\n            onFileChange: this.onFileChange,\n\n            item: this.state.item\n         })\n      );\n   };\n\n   return ManageMemorial;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var lib__ref__0_routes_ManageMemorial = __webpack_exports__[\"default\"] = (ManageMemorial_ManageMemorial);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-ManageMemorial.chunk.66374.js","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\n\nconst ContentList = (props) => (\n   <div>\n      <h3>Items</h3>\n      <button\n         class=\"btn btn-primary\"\n         onClick={props.newItem}\n      >\n         Add Item\n      </button>\n      { \n         props.items.map((item) => (\n            <ContentTile \n               id={item.id}\n               title={item.title} \n               date={item.start} \n               location={item.location} \n               src={item.src}\n               showModal={(id) => props.showModal(id)}\n               edited={item.edited}\n            />\n         ))\n      }\n   </div>\n)\n\nconst ContentTile = (props) => (\n   <div class=\"tile\" style={\"max-width: 500px;\" + (props.edited ? \"background:lightcoral;\" : \"\")}>\n      <div class=\"tile-icon\">\n         <img class=\"responsive-img\" src={props.src} style=\"max-width:200px\"/>\n      </div>\n      <div class=\"tile-content\">\n         <p class=\"tile-title\">{props.title}</p>\n         <div class=\"tile-subtitle text-gray\">{props.location}</div>\n         <div class=\"tile-subtitle text-gray\">{props.date}</div>\n      </div>\n      <div class=\"tile-action\">\n         <button \n            class=\"btn\"\n            onClick={(id) => props.showModal(props.id)}\n         > \n            Edit item\n         </button>\n      </div>\n   </div>\n)\n\nexport default ContentList;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/ContentList.js","import { h, Component } from 'preact';\n\nconst EditCard = (props) => (\n\n   <div class={ \"panel\" }>\n\n      <div class=\"panel-body mt-2\">\n\n         {/* no need to render image if it doesn't exist */}\n         { props.item.src &&\n            <img \n               src={props.item.src} \n               alt={props.item.title} \n               class=\"img-responsive my-2\"\n            />\n         }\n\n         <h4>{props.item.title}</h4>\n\n         <div class=\"text-gray d-inline\">{props.item.location}</div> \n         <div class=\"text-gray d-inline mx-2\">{props.item.start}</div>\n\n         <p>{props.item.caption}</p>\n\n      </div>\n\n      {/*\n      <div class=\"card-footer\">\n         <button class=\"btn btn-primary\">Do</button>\n      </div>\n      */}\n\n   </div>\n)\n\nexport default EditCard;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/EditCard.js","import { h, Component } from 'preact';\nimport classnames from 'classnames';\nimport { TextArea, TextInput, DateInput } from '../../components/form-inputs';\nimport EditCard from './EditCard';\n\n// edit a chronicle item\nclass EditModal extends Component {\n\n   render (props) {\n      let modalClasses = classnames(\n         \"modal\", \"modal-lg\", { \"active\": props.showModal }, { \"has-error\": props.modalError}\n      );\n\n      return (\n         <div class={modalClasses}>\n\n            <a onClick={props.hideModal} \n               class=\"modal-overlay\" \n               aria-label=\"Close\" \n            />\n\n            <div class=\"modal-container\">\n\n               <div class=\"modal-header\">\n\n                  <a onClick={props.hideModal} \n                     class=\"btn btn-clear float-right\" \n                     aria-label=\"Close\"\n                  />\n\n                  <div class=\"modal-title h5\">\n                     { props.item.id ?\n                        \"Edit Item\"\n                           :\n                        \"Add Item\"\n                     }\n                  </div>\n\n               </div>\n\n               <div class=\"modal-body\">\n                  <div class=\"content container columns\">\n\n                     <div class=\"column col-6\">\n                        <EditCard item={props.item} />\n                     </div>\n\n                     {/* <div class=\"column col-1 divider-vert\" /> */}\n\n                     <form class=\"form-group column col-6\">\n\n                        <TextInput \n                           label=\"Title\" \n                           name=\"title\" \n                           value={props.item.title} \n                           onChange={props.onChange} \n                        />\n\n                        {/*\n                        <TextInput \n                           label=\"Subtitle\" \n                           name=\"subtitle\"\n                           value={props.subtitle}\n                           onChange={props.onChange}\n                        />\n                        */}\n\n                        <TextInput \n                           label=\"Location\" \n                           name=\"location\"\n                           value={props.item.location}\n                           onChange={props.onChange}\n                        />\n\n                        <DateInput \n                           label=\"Date\" \n                           name=\"start\"\n                           value={props.item.start}\n                           onChange={props.onChange}\n                        />\n\n                        {/*\n                        <TextArea \n                           label=\"Caption\" \n                           rows=\"6\"\n                           name=\"txt\"\n                           value={props.txt}\n                           onChange={props.onChange}\n                        />\n                        */}\n\n                        <label\n                           class=\"form-label\"\n                        >\n                           Change photo\n                           <input \n                              class=\"form-input\"\n                              type=\"file\" \n                              accept=\".jpg, .jpeg, .png\"\n                              value={props.item.file} \n                              onChange={props.onFileChange}\n                           />\n                        </label>\n\n                     </form>\n\n                  </div>\n\n               </div>\n\n\n               <div class=\"modal-footer\">\n\n                  <button \n                     class=\"btn btn-primary\"\n                     onClick={ props.item.id ? props.updChronicle : props.newChronicle } \n                  >\n                     { props.item.id ?\n                        \"Update item\"\n                           :\n                        \"Add item\"\n                     }\n                  </button>\n\n               </div>\n\n            </div>\n\n         </div>\n      );\n   }\n\n}\n\nexport default EditModal;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/EditModal.js","import { route } from 'preact-router';\n\nconst PublicUrl = (props) => {\n   return (\n      <p>\n         The public url for {props.nm1}'s Chronicle is\n         <button \n            class=\"btn btn-link\" \n            onClick={() => route('/' + props.urlStr + '/' + props.urlNm + '/chronicle')}\n         >\n            {'/' + props.urlStr + '/' + props.urlNm + '/chronicle'}\n         </button>\n      </p>\n   )\n}\n\nexport default PublicUrl;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/PublicUrl.js","import { h, Component } from 'preact';\nimport API_ENDPOINT from '../../api';\n\nimport ContentList from './ContentList';\nimport EditModal from './EditModal';\nimport PublicUrl from './PublicUrl';\n\nclass ManageMemorial extends Component {\n   state = {\n      item: {},\n      showModal: false,\n   }\n\n   onChange = (e) => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      newState[e.target.name] = e.target.value;\n      this.setState({ oldState: newState });\n   }\n\n   onFileChange = (e) => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      newState[\"file\"] = e.target.files[0];\n      this.setState({ oldState: newState });\n      // needed to do this as a separate step so the state\n      // updates properly. which means this is a hack.\n      this.makeFileURL();\n   }\n\n   makeFileURL = () => {\n      let oldState = this.state.item;\n      let newState = this.state.item;\n      let reader = new FileReader();\n\n      reader.onload = (e) => {\n        newState[\"src\"] = e.target.result;\n        this.setState({ oldState: newState })\n      }\n\n      reader.readAsDataURL(this.state.item.file);\n   }\n\n   updChronicle = () => {\n      console.log('updChronicle');\n\n      // handle errors\n      if (!(this.state.item.title && this.state.item.start)) {\n         alert(\"A new item must have a title and a date\");\n         return;\n      }\n\n      // NOTE - this whole thing feels like a hack as the fetch call\n      // is basically repeated. look into async/await or a promise.\n\n      // if there's an image to upload...\n      if (this.state.item.file) {\n\n         let reader = new FileReader();\n\n         reader.readAsDataURL(this.state.item.file);\n\n         reader.onload = (e) => {\n            // NOTE - must remove padding for picolisp\n            //\n            // base64 strings are padded with one or two '='s to make sure it aligns\n            // to proper byte boundaries. the picolisp server does not handle this \n            // well. so we must remove any padding before it is sent. after picolisp\n            // has parsed the http request, we can add the appropriate padding back\n            // to the string by checking if it is an even multiple of 4.\n            //\n            // see 'server.l' for the picolisp side.\n            //\n            // NOTE - turns out that we don't need to add padding back on the server\n            // as the base64 utility is still able to decode.\n\n            // base64 string without padding\n            let str = e.target.result.split('=')[0]\n\n            fetch( API_ENDPOINT + \"!updChronicle?\" + this.props.urlNm,\n               { \n                  method: \"POST\", \n                  body: JSON.stringify({ \n                     loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                     id: this.state.item.id,\n                     title: this.state.item.title,\n                     location: this.state.item.location,\n                     date: this.state.item.start,\n                     txt: this.state.item.txt,\n                     image: str\n                  }) \n               }\n            )\n            .then( res => res.json() )\n            .then( json => {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               // this.addItem(json);\n            })\n            .then( this.setState({ \n               item: {}\n            }));\n            \n         }\n\n      } else {\n\n         // EDIT URL BELOW\n         fetch( API_ENDPOINT + \"!updChronicle?\" + this.props.urlNm,\n            { \n               method: \"POST\", \n               body: JSON.stringify({ \n                  loginToken: window.sessionStorage.getItem(\"loginToken\"),\n                  id: this.state.item.id,\n                  title: this.state.item.title,\n                  location: this.state.item.location,\n                  date: this.state.item.start,\n                  txt: this.state.item.txt,\n               }) \n            }\n         )\n         .then( res => res.json() )\n         .then( json => {\n            console.log(json);\n            // UPDATE TIMELINE STATE HERE\n            // NOTE - this may not be necessary, as new entries\n            // will likely go into a holding container to await\n            // editing/approval by shrine moderator\n            // this.refs.timeline.addItem(json);\n            // this.addItem(json);\n         })\n         .then( this.setState({ \n            item: {}\n         }));\n\n      }\n\n      this.hideModal();\n   }\n\n   newChronicle = () => {\n      console.log('newChronicle');\n      // handle errors\n      if (!(this.state.item.title && this.state.item.start)) {\n         alert(\"A new item must have a title and a date\");\n         return;\n      }\n\n      // NOTE - this whole thing feels like a hack as the fetch call\n      // is basically repeated. look into async/await or a promise.\n\n      // if there's an image to upload...\n      if (this.state.item.file) {\n\n         let reader = new FileReader();\n\n         reader.readAsDataURL(this.state.item.file);\n\n         reader.onload = (e) => {\n            // NOTE - must remove padding for picolisp\n            //\n            // base64 strings are padded with one or two '='s to make sure it aligns\n            // to proper byte boundaries. the picolisp server does not handle this \n            // well. so we must remove any padding before it is sent. after picolisp\n            // has parsed the http request, we can add the appropriate padding back\n            // to the string by checking if it is an even multiple of 4.\n            //\n            // see 'server.l' for the picolisp side.\n            //\n            // NOTE - turns out that we don't need to add padding back on the server\n            // as the base64 utility is still able to decode.\n\n            // base64 string without padding\n            let str = e.target.result.split('=')[0]\n\n            fetch( API_ENDPOINT + \"!postChronicle?\" + this.props.urlNm,\n               { \n                  method: \"POST\", \n                  body: JSON.stringify({ \n                     title: this.state.item.title,\n                     subtitle: this.state.item.subtitle,\n                     location: this.state.item.location,\n                     date: this.state.item.start,\n                     txt: this.state.item.txt,\n                     image: str\n                  }) \n               }\n            )\n            .then( res => res.json() )\n            .then( json => {\n               console.log(json);\n               // UPDATE TIMELINE STATE HERE\n               // NOTE - this may not be necessary, as new entries\n               // will likely go into a holding container to await\n               // editing/approval by shrine moderator\n               // this.refs.timeline.addItem(json);\n               this.addItem(json);\n            })\n            .then( this.setState({ \n               item: {}\n            }));\n            \n         }\n\n      } else {\n\n         // EDIT URL BELOW\n         fetch( API_ENDPOINT + \"!postChronicle?\" + this.props.urlNm,\n            { \n               method: \"POST\", \n               body: JSON.stringify({ \n                  title: this.state.item.title,\n                  subtitle: this.state.item.subtitle,\n                  location: this.state.item.location,\n                  date: this.state.item.start,\n                  txt: this.state.item.txt,\n               }) \n            }\n         )\n         .then( res => res.json() )\n         .then( json => {\n            console.log(json);\n            // UPDATE TIMELINE STATE HERE\n            // NOTE - this may not be necessary, as new entries\n            // will likely go into a holding container to await\n            // editing/approval by shrine moderator\n            // this.refs.timeline.addItem(json);\n            this.addItem(json);\n         })\n         .then( this.setState({ \n            item: {}\n         }));\n\n      }\n\n      this.hideModal();\n   }\n\n   showModal = (id) => {\n      let memorial = this.props.user.memorials.find(m => m.urlNm === this.props.urlNm);\n      this.setState({ showModal: true, item: memorial.items.find(item => item.id === id) });\n   }\n\n   hideModal = () => {\n      let oldItem = this.state.item;\n      let newItem = this.state.item;\n      newItem[\"edited\"] = true;\n      this.setState({ \n         showModal: false, \n         modalError: false,\n         oldItem: newItem\n      });\n   }\n\n   newItem = () => {\n      this.showModal();\n      this.setState({ item: {} });\n   }\n\n   render () {\n      let memorial = this.props.user.memorials.find(m => m.urlNm === this.props.urlNm);\n      return (\n         <div>\n            <h2>{memorial.nm}</h2>\n            <figure class=\"avatar avatar-xxl\">\n               <img src={memorial.avatar} />\n            </figure>\n            <PublicUrl nm1={memorial.nm1} urlStr={memorial.urlStr} urlNm={memorial.urlNm}/>\n            <ContentList \n               showModal={this.showModal} \n               items={memorial.items} \n               newItem={this.newItem}\n            />\n            <EditModal \n               showModal={this.state.showModal}\n               hideModal={this.hideModal}\n\n               updChronicle={this.updChronicle}\n               newChronicle={this.newChronicle}\n\n               onChange={this.onChange}\n               onFileChange={this.onFileChange}\n\n               item={this.state.item}\n            />\n         </div>\n      )\n   }\n}\n\nexport default ManageMemorial;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/ManageMemorial/index.js"],"sourceRoot":""}