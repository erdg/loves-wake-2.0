"use strict";var precacheConfig=[["/assets/favicon.ico","32c21b1029948e50d0b5a13138d35a26"],["/assets/icons/android-chrome-192x192.png","9473d05f9469e3bf6ad9bf9068cd9741"],["/assets/icons/android-chrome-384x384.png","56cad83eec8747f26521318e66b0a1d0"],["/assets/icons/apple-touch-icon.png","86535111dda0d14dd8a68fc4db1c072d"],["/assets/icons/favicon-16x16.png","bfca4faea75cc1bf542447036c81d489"],["/assets/icons/favicon-32x32.png","861633fa48d02ff5ed23723161973b1e"],["/assets/icons/mstile-150x150.png","e527ca999d0cd4117b919e12f7def55f"],["/assets/loves-wake-logo.png","c15ec0d101336e56a99fde70b5c695af"],["/assets/loves-wake.png","5c800bb9cb2bc1c68d91bdd059888dfa"],["/bundle.3df80.js","8d51e249117efb1e7003801a94a55af9"],["/favicon.ico","32c21b1029948e50d0b5a13138d35a26"],["/index.html","6827ab9d527c793aa66fbaf989bedb56"],["/manifest.json","b3f96efd3784123dc269efd35ed29683"],["/route-Atlas.chunk.19564.js","af70446ea026db0a4155ea49c4ec6ab5"],["/route-Chronicle.chunk.dec44.js","ae09035ae0455baa1a5f7f34732f1007"],["/route-Entry.chunk.077ab.js","6c30927722ef828ae43d0b9040bc06ca"],["/route-Login.chunk.542de.js","025ae6254ce0c61b9ab0f1ea6506df56"],["/route-ManageMemorial.chunk.20d7e.js","c43e607fbc335fe6128053d2f0c2cf83"],["/route-Shrine.chunk.4e999.js","a8f2d2823eb75e6d3fd77d033c248a1f"],["/route-create-shrine.chunk.22b4d.js","1548d91d64ffe2eb9dc146c9968b1e06"],["/route-home.chunk.d8b66.js","945ca7de4174439f3329c0ff651e5b6c"],["/route-signup.chunk.eef06.js","7d1d134e62e0f20402438241b905dd6b"],["/route-user.chunk.c913d.js","d6c30ed5eaf9d657369ac4667d922687"],["/style.1d1e3.css","ad1aa2d1b50444ba00df590240af0d46"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,t,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),r=createCacheKey(a,hashParamName,t,!1);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),a="index.html";(n=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,a),n=urlsToCacheKeys.has(t));var r="index.html";!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(r,self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});